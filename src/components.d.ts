/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface CountryCode {
    'phoneCode': string;
  }
  interface CountryCodeAttributes extends StencilHTMLAttributes {
    'onCountrySelected'?: (event: CustomEvent) => void;
    'phoneCode'?: string;
  }

  interface PhoneField {
    'getFullValue': () => Promise<string>;
    'phoneCode': string;
    'phoneNumber': string;
  }
  interface PhoneFieldAttributes extends StencilHTMLAttributes {
    'phoneCode'?: string;
    'phoneNumber'?: string;
  }

  interface PhoneInput {
    'phoneNumber': string;
  }
  interface PhoneInputAttributes extends StencilHTMLAttributes {
    'onInputBlur'?: (event: CustomEvent) => void;
    'onInputFocus'?: (event: CustomEvent) => void;
    'onNumberChange'?: (event: CustomEvent) => void;
    'onNumberInput'?: (event: CustomEvent) => void;
    'phoneNumber'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'CountryCode': Components.CountryCode;
    'PhoneField': Components.PhoneField;
    'PhoneInput': Components.PhoneInput;
  }

  interface StencilIntrinsicElements {
    'country-code': Components.CountryCodeAttributes;
    'phone-field': Components.PhoneFieldAttributes;
    'phone-input': Components.PhoneInputAttributes;
  }


  interface HTMLCountryCodeElement extends Components.CountryCode, HTMLStencilElement {}
  var HTMLCountryCodeElement: {
    prototype: HTMLCountryCodeElement;
    new (): HTMLCountryCodeElement;
  };

  interface HTMLPhoneFieldElement extends Components.PhoneField, HTMLStencilElement {}
  var HTMLPhoneFieldElement: {
    prototype: HTMLPhoneFieldElement;
    new (): HTMLPhoneFieldElement;
  };

  interface HTMLPhoneInputElement extends Components.PhoneInput, HTMLStencilElement {}
  var HTMLPhoneInputElement: {
    prototype: HTMLPhoneInputElement;
    new (): HTMLPhoneInputElement;
  };

  interface HTMLElementTagNameMap {
    'country-code': HTMLCountryCodeElement
    'phone-field': HTMLPhoneFieldElement
    'phone-input': HTMLPhoneInputElement
  }

  interface ElementTagNameMap {
    'country-code': HTMLCountryCodeElement;
    'phone-field': HTMLPhoneFieldElement;
    'phone-input': HTMLPhoneInputElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
